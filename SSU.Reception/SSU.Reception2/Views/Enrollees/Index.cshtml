@model IEnumerable<SSU.Reception.Models.Enrollee>

@{
    ViewBag.Title = "Список абитуриентов";
}

<div class="panel panel-info">
    <div class="panel-heading">
        Общий список абитуриентов на @DateTime.Now
    </div>

    <div class="panel-body">
        @using (Html.BeginForm("Index", "Enrollees", FormMethod.Get, new { @class = "form-inline", @style = "justify-content: space-between; display: flex" }))
        {
            @Html.AntiForgeryToken()

            <!-- Строка поиска -->
            @Html.Editor("search", (string)ViewData["search"], new { htmlAttributes = new { @class = "form-control", @style = "display: inline-flex", @placeholder = "Поиск по ФИО.." } })

            <!-- Чекбокс "Только активные абитуриенты" -->
            <div>
                @Html.CheckBox("activeOnly", (bool)ViewData["activeOnly"], new { @class = "form-check-input", @id = "checkbox-activity" })
                <label class="form-check-label" for="checkbox-activity">Только активные абитуриенты</label>
            </div>

            <!-- Чекбокс "Только оригинал аттестата" -->
            <div>
                @Html.CheckBox("originalCertificateOnly", (bool)ViewData["originalCertificateOnly"], new { @class = "form-check-input", @id = "checkbox-certificate" })
                <label class="form-check-label" for="checkbox-certificate">Только оригинал аттестата</label>
            </div>

            <!-- Кнопка "применить" -->
            <input type="submit" value="Применить" class="btn btn-success" />
        }
    </div>
</div>

<div class="table-responsive">
    <table id="dataTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    #
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Surname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Patronymic)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.School)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamYear)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PersonalPhone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MathScore)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RussianScore)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CSScore)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SSScore)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.HasMedal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstLevelOlympiad)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OtherOlympiads)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceiptStatus)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalPoints)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OriginalCertificate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstPriority)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SecondPriority)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ThirdPriority)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstPriorityNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SecondPriorityNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ThirdPriorityNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PersonalPhone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AdditionalPhones)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Comment)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EnrollmentStatus)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ActivityStatus)
                </th>
                <th id="info_column"></th>
            </tr>
        </thead>
        @{
            int i = 1;
        }
        <tbody id="contact-table">
            @foreach (var item in Model)
            {
                <tr>
                    <td>@i</td>
                    @{
                        i++;
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.Surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Patronymic)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.School.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExamYear)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PersonalPhone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MathScore)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RussianScore)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CSScore)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SSScore)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HasMedal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstLevelOlympiad)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OtherOlympiads)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GetReceiptStatus)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalPoints)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OriginalCertificate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstPriority.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SecondPriority.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ThirdPriority.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstPriorityNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SecondPriorityNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ThirdPriorityNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PersonalPhone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AdditionalPhones)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Comment)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EnrollmentStatus)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActivityStatus)
                    </td>
                    <td>
                        @Html.ActionLink("Изменить", "Edit", new { id = item.Id })
                        @Html.ActionLink("Инфо", "Details", new { id = item.Id })
                        @Html.ActionLink("Удалить", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<div style="justify-content: center; width: 100%; margin:15px 15px 2px 4px;">
    @SSU.Reception.Helpers.HtmlHelperExtension.PagingPrev(Html, (int)ViewData["page"])
    @Html.ActionLink("Создать нового абитуриента", "Create", null, new { @class = "btn btn-success" })
    @SSU.Reception.Helpers.HtmlHelperExtension.PagingNext(Html, (int)ViewData["page"], (int)ViewData["items_count"], (int)ViewData["size"])
    <button class="btn btn-primary" onclick="javascript: fnExcelReport('dataTable', 'Абитуриенты @DateTime.Now.ToString("G")')">Экспорт</button>
</div>

<script src="~/Scripts/FileSaver.js"></script>
<script src="~/Scripts/excel-export.js"></script>