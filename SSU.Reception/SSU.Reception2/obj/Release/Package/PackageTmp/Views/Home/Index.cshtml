@model SSU.Reception.Models.RatingViewModel

@{
    ViewBag.Title = "Главная";
}

<div class="panel panel-info">

    <div class="panel-heading">
        Общий рейтинг абитуриентов на @DateTime.Now
    </div>

    <div class="panel-body">
        @using (Html.BeginForm("Index", "Home", new { page = ViewData["page"] }, FormMethod.Get, new { @class = "form-inline", @style = "justify-content: space-between; display: flex" }))
        {
            @Html.AntiForgeryToken()

            <!-- Строка поиска -->
            @Html.Editor("search", (string)ViewData["search"], new { htmlAttributes = new { @class = "form-control", @style = "display: inline-flex", @placeholder = "Поиск по ФИО.." } })

            <!-- Чекбокс "Только активные абитуриенты" -->
            <div>
                @Html.CheckBox("activeOnly", (bool)ViewData["activeOnly"], new { @class = "form-check-input", @id = "checkbox-activity" })
                <label class="form-check-label" for="checkbox-activity">Только активные абитуриенты</label>
            </div>

            <!-- Чекбокс "Только оригинал аттестата" -->
            <div>
                @Html.CheckBox("originalCertificateOnly", (bool)ViewData["originalCertificateOnly"], new { @class = "form-check-input", @id = "checkbox-certificate" })
                <label class="form-check-label" for="checkbox-certificate">Только оригинал аттестата</label>
            </div>

            <!-- Кнопка "применить" -->
            <input type="submit" value="Применить" class="btn btn-success" />
        }
    </div>
</div>

<div style="justify-content: center; width: 100%; margin:15px 15px 2px 4px;">
    @SSU.Reception.Helpers.HtmlHelperExtension.PagingPrev(Html, (int)ViewData["page"])
    @SSU.Reception.Helpers.HtmlHelperExtension.PagingNext(Html, (int)ViewData["page"], (int)ViewData["items_count"], (int)ViewData["size"])
    <button class="btn btn-primary" onclick="javascript: fnExcelReport('dataTable', 'Общий рейтинг @DateTime.Now.ToString("G") стр. @((int)ViewData["page"])')">Экспорт</button>
</div>

<div class="table-responsive">
    <table id="dataTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th id="info_column" rowspan="2"  class="contact-table__actions">~</th>
                @{
                    int dirCount = Model.SortedDirections.Count;
                }
                <th id="index" rowspan="2">#</th>
                <th colspan="@dirCount.ToString()">Общий список направлений</th>
                <th id="first_status" rowspan="2">Стат. в прик.</th>
                <th id="FIO" rowspan="2">ФИО</th>
                <th id="point_sum" rowspan="2">Сум. балл</th>
                <th colspan="4">Баллы ЕГЭ</th>
                <th id="second_status" rowspan="2">Ст пст.</th>
                <th id="original_direction" rowspan="2">Напр. где ориг</th>
                <th id="first_priority" rowspan="2">1-й пр</th>
                <th id="second_priority" rowspan="2">2-й пр</th>
                <th id="third_priority" rowspan="2">3-й пр</th>
                <th id="medal_point" rowspan="2">Медаль</th>
                <th id="dop_point" rowspan="2">Доп. баллы</th>
                <th id="original_status" rowspan="2">Ст. ориг</th>
            </tr>
            <tr>
                @{
                    foreach (var direction in Model.SortedDirections.Keys)
                    {
                        <th>@direction.Name</th>
                    }
                }
                <th>М</th>
                <th>И</th>
                <th>Р</th>
                <th>О</th>
            </tr>
        </thead>
        @{
            int i = 1;
        }
        @foreach (var item in Model.Enrollees)
        {
            <tr>
                <!-- Изменить -->
                <td class="contact-table__actions">
                    @Html.ActionLink("Изменить", "Edit", "Enrollees", new { id = item.Id }, null)
                    <!-- Удалить -->
                    @Html.ActionLink("Удалить", "Delete", "Enrollees", new { id = item.Id }, null)
                </td>
                <td>@i</td>
                @{
                    i++;
                }
                <!-- Общий список направлений и позиция на этом направлении в общем списке -->
                @{
                    if (Model.SortedDirections.Count == 0)
                    {
                        <td></td>
                    }
                    else
                    {
                        foreach (var direction in Model.SortedDirections)
                        {
                            var index = direction.Value.IndexOf(item) + 1;
                            if (index != 0)
                            {
                                <td>@index</td>
                            }
                            else
                            {
                                <td></td>
                            }
                        }
                    }
                }
                <!-- Статус в приказе после 29 июля и 1 августа -->
                <td>
                    @Html.BoolToString(item.EnrollmentStatus)
                </td>
                <!-- ФИО -->
                <td>
                    @Html.DisplayFor(modelItem => item.Surname)
                    @Html.DisplayFor(modelItem => item.Name)
                    @Html.DisplayFor(modelItem => item.Patronymic)
                </td>
                <!-- Общая сумма баллов -->
                <td>
                    @Html.DisplayFor(modelItem => item.TotalPoints)
                </td>
                <!-- Баллы ЕГЭ -->
                <td>
                    @Html.DisplayFor(modelItem => item.MathScore)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CSScore)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RussianScore)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SSScore)
                </td>
                <!-- Статус поступления -->
                <td>
                    @Html.DisplayFor(modelItem => item.ReceiptStatusToString)
                </td>
                <!-- Направление, на котором лежит оригинал -->
                <td>
                    @{
                        if (item.OriginalCertificate == true)
                        {
                            @Html.DisplayFor(modelItem => item.FirstPriority.Name)
                        };
                    }
                </td>
                <!-- 1-й приоритет -->
                <td>
                    @Html.DisplayFor(modelItem => item.FirstPriority.Name)
                </td>
                <!-- 2-й приоритет -->
                <td>
                    @Html.DisplayFor(modelItem => item.SecondPriority.Name)
                </td>
                <!-- 3-й приоритет -->
                <td>
                    @Html.DisplayFor(modelItem => item.ThirdPriority.Name)
                </td>
                <!-- Баллы за медаль -->
                <td>
                    @Html.BoolToString(item.HasMedal)
                </td>
                <!-- Доп. баллы -->
                <td>
                    @Html.DisplayFor(modelItem => item.ExtraPoints)
                </td>
                <!-- Статус оригинала -->
                <td>
                    @Html.BoolToString(item.OriginalCertificate)
                </td>

                <!-- Статус зачисления в другом вузе -->
                @*<td></td>*@
            </tr>
        }
    </table>
</div>

<script src="~/Scripts/FileSaver.js"></script>
<script src="~/Scripts/excel-export.js"></script>